<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== #29. mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ==== #29. 루트 엘리먼트 & 네임스페이스 설정(프로젝트 전체내에서 유일해야 한다.) ==== -->
<!-- ==== 대부분은 namespace에 파일이름 사용(유일하니까) ==== -->
<mapper namespace="minjeong">


	<!-- 메인페이지 받은메일함 시작 -->
	<resultMap type="HashMap" id="mailReceive_main">
      <result property="pk_mail_num" 		column="pk_mail_num" 		javaType="String" />
      <result property="fk_senduser_num" 	column="fk_senduser_num" 	javaType="String" />
      <result property="sendempname" 		column="sendempname" 		javaType="String" />
      <result property="subject" 			column="subject" 			javaType="String" />
      <result property="reg_date" 			column="reg_date" 			javaType="String" />
      <result property="reservation_date" 	column="reservation_date" 	javaType="String" />	
	</resultMap>
	
 	<select id="mailReceive_main" resultMap="mailReceive_main" parameterType="String">
		select pk_mail_num, fk_senduser_num, sendempname, subject, reg_date, reservation_date
		from 
		(
		select row_number() over(order by pk_mail_num desc) AS rno,
		       pk_mail_num, fk_senduser_num, sendempname, subject
		       , to_char(reg_date,'yyyy-mm-dd hh24:mi:ss') as reg_date
		       , to_char(reservation_date, 'yyyy-mm-dd hh24:mi:ss') as reservation_date
		from tbl_mail
		where fk_receiveuser_num = #{fk_receiveuser_num} and fk_senduser_num != #{fk_receiveuser_num} and
		del_status = 0 and reservation_status = 0 and temp_status = 0	
		) V
		where rno between 1 and 5
	</select>

	<!-- 메인페이지 받은메일함 끝 -->



	<!-- ===== 받은메일함 시작 ===== -->
	
	<!-- 받은메일함 목록 보여주기 (검색 X, 페이징 X) -->
	<!-- 
	<select id="getReceiveMailList" resultType="com.spring.bts.minjeong.model.MailVO">
		select pk_mail_num, fk_senduser_num, sendempname, subject
			 , to_char(reg_date,'yyyy-mm-dd hh24:mi:ss') as reg_date
		from tbl_mail
		order by pk_mail_num desc		
	</select>
 	-->

	<!--  총 받은메일 개수 구해오기 -->
	<select id="getTotalCount" parameterType="HashMap" resultType="int">
		select count(*)
		from tbl_mail
		where fk_receiveuser_num = #{fk_receiveuser_num} and fk_senduser_num != #{fk_receiveuser_num} and
		del_status = 0 and reservation_status = 0 and temp_status = 0
		<if test="searchType != ''">
		and lower(${searchType}) like '%' || lower(#{searchWord}) || '%'
		</if>		
	</select>

	<!--  페이징처리 한 받은 메일목록  1 (검색 있든, 없든 모두 다 포함)  -->
<!-- 
 	<select id="recMailListSearchWithPaging" parameterType="HashMap" resultType="com.spring.bts.minjeong.model.MailVO">
		select pk_mail_num, fk_senduser_num, sendempname, subject, reg_date, filename, reservation_date, importance, importance_star_rec
		from 
		(
		select row_number() over(order by pk_mail_num desc) AS rno,
		       pk_mail_num, fk_senduser_num, sendempname, subject
		       , to_char(reg_date,'yyyy-mm-dd hh24:mi:ss') as reg_date
		       , filename, to_char(reservation_date, 'yyyy-mm-dd hh24:mi:ss') as reservation_date
		       , importance, importance_star_rec
		from tbl_mail
		where fk_receiveuser_num = #{fk_receiveuser_num} and fk_senduser_num != #{fk_receiveuser_num} and
		del_status = 0 and reservation_status = 0 and temp_status = 0
		<if test="searchType != ''">
		and lower(${searchType}) like '%' || lower(#{searchWord}) || '%'
		</if>	
		) V
		where rno between #{startRno} and #{endRno}
	</select> -->
 
	<!--  페이징처리 한 받은 메일목록 2 (검색 있든, 없든 모두 다 포함 && 읽음상태 표시)  -->
 	<select id="recMailListSearchWithPaging" parameterType="HashMap" resultType="com.spring.bts.minjeong.model.MailVO">
	select pk_mail_num, fk_senduser_num, sendempname, subject, reg_date, filename, reservation_date, importance, importance_star_rec, rec_status
		from 
		(
		select row_number() over(order by pk_mail_num desc) AS rno,
		       pk_mail_num, fk_senduser_num, sendempname, subject
		       , to_char(reg_date,'yyyy-mm-dd hh24:mi:ss') as reg_date
		       , filename, to_char(reservation_date, 'yyyy-mm-dd hh24:mi:ss') as reservation_date
		       , importance, importance_star_rec, rec_status
		from tbl_mail M join tbl_mailread R
		on M.pk_mail_num = R.fk_mail_num
		where fk_receiveuser_num = #{fk_receiveuser_num} and fk_senduser_num != #{fk_receiveuser_num} and
		del_status = 0 and reservation_status = 0 and temp_status = 0
		<if test="searchType != ''">
		and lower(${searchType}) like '%' || lower(#{searchWord}) || '%'
		</if>	
		) V
		where rno between #{startRno} and #{endRno} 		
	</select>


	<!-- 페이징처리 / 검색기능 포함 된 받은메일함 목록에서 상세내용 조회하기 (이전글, 다음글 제외) -->
	<!--
	<select id="getRecMailView" parameterType="HashMap" resultType="com.spring.bts.minjeong.model.MailVO">	
		select pk_mail_num, fk_senduser_num, fk_receiveuser_num, recemail, sendemail, recempname, sendempname, subject, content, reg_date, reservation_date
			 , filename, orgfilename, filesize
				from
				(
				    select pk_mail_num, fk_senduser_num, fk_receiveuser_num, recemail, sendemail, recempname, sendempname, subject, content
				         , to_char(reg_date, 'yyyy-mm-dd hh24:mi:ss') as reg_date         
				         , to_char(reservation_date, 'yyyy-mm-dd hh24:mi:ss') as reservation_date, fileName, orgFilename, fileSize
				    from tbl_mail
					<if test='searchType != "" and searchWord != "" '>
					where lower(${searchType}) like '%'|| lower(#{searchWord}) || '%'
					</if>	    
				) V
		where V.pk_mail_num = #{pk_mail_num}
	</select>
	-->	

	<!-- 페이징처리 / 검색기능 포함 된 받은메일함 목록에서 상세내용 조회하기 (이전글, 다음글 포함) -->

	<select id="getRecMailView" parameterType="HashMap" resultType="com.spring.bts.minjeong.model.MailVO">	
		select prev_seq ,pk_mail_num
     		 , prev_subject, fk_senduser_num, fk_receiveuser_num, recemail, sendemail, recempname, sendempname, subject, content, reg_date, reservation_date
		     , next_seq, next_subject
		     , filename, orgfilename, filesize
		        from
		        (
		            select lag(pk_mail_num,1) over(order by pk_mail_num desc) AS prev_seq            
		                 , lag(subject,1,'이전글이 없습니다.') over(order by pk_mail_num desc) AS prev_subject
		                 , pk_mail_num, fk_senduser_num, fk_receiveuser_num, recempname, sendempname, recemail, sendemail, subject, content
		                 , to_char(reg_date, 'yyyy-mm-dd hh24:mi:ss') as reg_date	
		                 , to_char(reservation_date, 'yyyy-mm-dd hh24:mi:ss') as reservation_date
		                 , lead(pk_mail_num,1) over(order by pk_mail_num desc) AS next_seq
		                 , lead(subject,1,'다음글이 없습니다.') over(order by pk_mail_num desc) AS next_subject	         
		                 , fileName, orgFilename, fileSize
		            from tbl_mail
					where fk_receiveuser_num = #{fk_receiveuser_num} and fk_senduser_num != #{fk_receiveuser_num}
					and del_status = 0 and reservation_status = 0 and temp_status = 0
					<if test='searchType != "" and searchWord != "" '>
					and lower(${searchType}) like '%'|| lower(#{searchWord}) || '%'
					</if>		            
		        ) V	
		where V.pk_mail_num = #{pk_mail_num}
	 </select>

	
	<!-- ===== 받은메일함 끝 ===== -->


	<!-- ===== 보낸메일함 시작 ===== -->

	<!--  총 보낸메일 개수 구해오기 -->
	<select id="getTotalCount_send" parameterType="HashMap" resultType="int">
		select count(*)
		from tbl_mail
		where fk_senduser_num = #{fk_senduser_num} and fk_receiveuser_num != #{fk_senduser_num} and
		del_status = 0 and reservation_status = 0 and temp_status = 0
		<if test="searchType != ''">
		and lower(${searchType}) like '%' || lower(#{searchWord}) || '%'
		</if>		
	</select>

	<!-- 페이징처리 한 보낸 메일목록 1(검색 있든, 없든 모두 다 포함) -->
	<!-- 
 	<select id="sendMailListSearchWithPaging" parameterType="HashMap" resultType="com.spring.bts.minjeong.model.MailVO">
		select pk_mail_num, fk_receiveuser_num, recempname, subject, reg_date, filename, reservation_date, importance, importance_star_send
		from
		(
		select row_number() over(order by pk_mail_num desc) AS rno,
		       pk_mail_num, fk_receiveuser_num, recempname, subject
		       , to_char(reg_date,'yyyy-mm-dd hh24:mi:ss') as reg_date
		       , filename, to_char(reservation_date, 'yyyy-mm-dd hh24:mi:ss') as reservation_date
		       , importance, importance_star_send
		from tbl_mail
		where fk_senduser_num = #{fk_senduser_num} and fk_receiveuser_num != #{fk_senduser_num} and
		del_status = 0 and reservation_status = 0 and temp_status = 0
		<if test="searchType != ''">
		and lower(${searchType}) like '%' || lower(#{searchWord}) || '%'
		</if>	
		) V
		where rno between #{startRno} and #{endRno}
	</select>  	-->		
	
	<!-- 페이징처리 한 보낸 메일목록 2 (검색 있든, 없든 모두 다 포함 && 읽음상태 표시) -->
 	<select id="sendMailListSearchWithPaging" parameterType="HashMap" resultType="com.spring.bts.minjeong.model.MailVO">
		select pk_mail_num, fk_receiveuser_num, recempname, subject, reg_date, filename, reservation_date, importance, importance_star_send, send_status
		from
		(
		select row_number() over(order by pk_mail_num desc) AS rno,
		       pk_mail_num, fk_receiveuser_num, recempname, subject
		       , to_char(reg_date,'yyyy-mm-dd hh24:mi:ss') as reg_date
		       , filename, to_char(reservation_date, 'yyyy-mm-dd hh24:mi:ss') as reservation_date
		       , importance, importance_star_send, send_status
		from tbl_mail M join tbl_mailread R
		on M.pk_mail_num = R.fk_mail_num
		where fk_senduser_num = #{fk_senduser_num} and fk_receiveuser_num != #{fk_senduser_num} and
		del_status = 0 and reservation_status = 0 and temp_status = 0
		<if test="searchType != ''">
		and lower(${searchType}) like '%' || lower(#{searchWord}) || '%'
		</if>
		) V
		where rno between #{startRno} and #{endRno}
	</select>


	<!-- 페이징처리 / 검색기능 포함 된 보낸메일함 목록에서 상세내용 조회하기 (이전글, 다음글 제외) -->
	<!-- 
	<select id="getSendMailView" parameterType="HashMap" resultType="com.spring.bts.minjeong.model.MailVO">	
		select pk_mail_num, fk_senduser_num, fk_receiveuser_num, recemail, sendemail, recempname, sendempname, subject, content, reg_date
			 , filename, orgfilename, filesize, reservation_date
				from
				(
				    select pk_mail_num, fk_senduser_num, fk_receiveuser_num, recemail, sendemail, recempname, sendempname, subject, content
				         , to_char(reg_date, 'yyyy-mm-dd hh24:mi:ss') as reg_date         
				         , fileName, orgFilename, fileSize, to_char(reservation_date, 'yyyy-mm-dd hh24:mi:ss') as reservation_date
				    from tbl_mail
					<if test='searchType != "" and searchWord != "" '>
					where lower(${searchType}) like '%'|| lower(#{searchWord}) || '%'
					</if>	    
				) V
		where V.pk_mail_num = #{pk_mail_num}
	</select>
	 -->

	<!-- 페이징처리 / 검색기능 포함 된 보낸메일함 목록에서 상세내용 조회하기 (이전글, 다음글 포함) -->

	<select id="getSendMailView" parameterType="HashMap" resultType="com.spring.bts.minjeong.model.MailVO">	
		select prev_seq ,pk_mail_num
     		 , prev_subject, fk_senduser_num, fk_receiveuser_num, recemail, sendemail, recempname, sendempname, subject, content, reg_date, reservation_date
		     , next_seq, next_subject
		     , filename, orgfilename, filesize
		        from
		        (
		            select lag(pk_mail_num,1) over(order by pk_mail_num desc) AS prev_seq            
		                 , lag(subject,1,'이전글이 없습니다.') over(order by pk_mail_num desc) AS prev_subject
		                 , pk_mail_num, fk_senduser_num, fk_receiveuser_num, recempname, sendempname, recemail, sendemail, subject, content
		                 , to_char(reg_date, 'yyyy-mm-dd hh24:mi:ss') as reg_date	
		                 , to_char(reservation_date, 'yyyy-mm-dd hh24:mi:ss') as reservation_date
		                 , lead(pk_mail_num,1) over(order by pk_mail_num desc) AS next_seq
		                 , lead(subject,1,'다음글이 없습니다.') over(order by pk_mail_num desc) AS next_subject	         
		                 , fileName, orgFilename, fileSize
		            from tbl_mail
					where fk_senduser_num = #{fk_senduser_num} and fk_receiveuser_num != #{fk_senduser_num} and
					del_status = 0 and reservation_status = 0 and temp_status = 0
					<if test='searchType != "" and searchWord != "" '>
					and lower(${searchType}) like '%'|| lower(#{searchWord}) || '%'
					</if>		            
		        ) V	
		where V.pk_mail_num = #{pk_mail_num}
	 </select>



	<!-- ===== 보낸메일함 끝 ===== -->


	<!-- ===== 메일쓰기 시작 ===== -->
	
	<!-- 메일주소로 사원이름 및 사원번호 알아오기 (resultMap 사용) -->
	<resultMap type="Map" id="EmpnameAndNum">
        <result property="emp_name"          column="emp_name"         	javaType="String" />
        <result property="pk_emp_no"         column="pk_emp_no"         javaType="String" />
    </resultMap>

	<select id="getEmpnameAndNum" parameterType="String" resultMap="EmpnameAndNum">
		select emp_name, pk_emp_no
		from tbl_employees
		where uq_email = #{uq_email}
	</select>
	
	
	<!-- 메일쓰기 (파일첨부가 없는 메일쓰기) reservation_date 가 있으면 reservation_status 를 1로 바꿔주고, 없으면 default -->
	<insert id="add" parameterType="com.spring.bts.minjeong.model.MailVO">
		insert into tbl_mail(pk_mail_num, fk_senduser_num, fk_receiveuser_num, recempname, sendempname, recemail, sendemail, subject, content, reg_date, importance, reservation_date, reservation_status, read_status, temp_status) 
		values(SEQ_MAIL.nextval, to_number(#{fk_senduser_num}), to_number(#{fk_receiveuser_num}), #{recempname}, #{sendempname}, #{recemail}, #{sendemail}, #{subject}, #{content}, default, #{importance}, to_date(#{reservation_date}, 'yyyy-mm-dd hh24:mi'), #{reservation_status}, default, #{temp_status})
    </insert>

	
	<!-- 메일쓰기 (파일첨부가 있는 메일쓰기) -->
	<insert id="add_withFile" parameterType="com.spring.bts.minjeong.model.MailVO">
		insert into tbl_mail(pk_mail_num, fk_senduser_num, fk_receiveuser_num, recempname, sendempname
						   , recemail, sendemail, subject, content, reg_date, filename, orgfilename, filesize, importance, reservation_date, reservation_status, read_status, temp_status) 
		values(SEQ_MAIL.nextval, to_number(#{fk_senduser_num}), to_number(#{fk_receiveuser_num}), #{recempname}
			   , #{sendempname}, #{recemail}, #{sendemail}, #{subject}, #{content}, default, #{filename}, #{orgfilename}, #{filesize}, #{importance}, to_date(#{reservation_date}, 'yyyy-mm-dd hh24:mi'), #{reservation_status}, default, #{temp_status})
	</insert>


	<!-- 메일 1개 상세내용을 읽어오기 (메일 전달 및 답장을 위함 - 검색타입과 검색명 없음) -->
	<select id="getRecMailView_noSearch" parameterType="HashMap" resultType="com.spring.bts.minjeong.model.MailVO">
		select fk_senduser_num, fk_receiveuser_num, recemail, sendemail , recempname, sendempname, subject, content
     		 , to_char(reservation_date, 'yyyy-mm-dd hh24:mi:ss') as reservation_date
     		 , to_char(reg_date,'yyyy-mm-dd hh24:mi:ss') as reg_date
     		 , filename, orgfilename
		from tbl_mail 
		where pk_mail_num = to_number(#{pk_mail_num})
	</select>

	<!-- ===== 메일쓰기 끝 ===== -->


	<!-- ===== 휴지통 시작 ===== -->

	<!-- // 각 메일함 상세보기에서 삭제버튼 클릭 (글 1개)시 해당 글번호 글 휴지통으로 이동하기 (del_status = 1) -->
	<update id="updateTblMailDelStatus_one" parameterType="HashMap">
		update tbl_mail set del_status = 1
		where pk_mail_num = to_number(#{pk_mail_num})
	</update>
	
	<!-- 받은메일함 or 보낸메일함에서 선택한 글번호에 해당하는 메일을 삭제 시, 메일 테이블에서 해당 메일번호의 삭제 상태를 1로 변경해주기 --> 
	<!-- 메일 테이블에서 해당 메일의 삭제 상태(del_status)를 1로 변경해주기 -->
	<update id="updateFromTblMailDelStatus" parameterType="HashMap">
		update tbl_mail set del_status = 1
		where pk_mail_num = #{pk_mail_num}
	</update>

	<!-- 휴지통 총 메일개수 구해오기 -->
	<select id="getTotalCount_recyclebin" parameterType="HashMap" resultType="int">
		select count(*)
		from tbl_mail
		where (fk_receiveuser_num = #{fk_receiveuser_num} or fk_senduser_num = #{fk_receiveuser_num} ) and del_status = 1
		<if test="searchType != ''">
		and lower(${searchType}) like '%' || lower(#{searchWord}) || '%'
		</if>		
	</select>
	
	<!--  페이징처리 한 휴지통목록 (검색 있든, 없든 모두 다 포함)  -->
	<select id="RecyclebinMailListSearchWithPaging" parameterType="HashMap" resultType="com.spring.bts.minjeong.model.MailVO">
		select pk_mail_num, fk_senduser_num, sendempname, subject, reg_date, filename, reservation_date, importance, importance_star_send, importance_star_rec
		from 
		(
		select row_number() over(order by pk_mail_num desc) AS rno,
		       pk_mail_num, fk_senduser_num, sendempname, subject
		       , to_char(reg_date,'yyyy-mm-dd hh24:mi:ss') as reg_date
		       , filename , to_char(reservation_date, 'yyyy-mm-dd hh24:mi:ss') as reservation_date
		       , importance, importance_star_send, importance_star_rec
		from tbl_mail
		where (fk_receiveuser_num = #{fk_receiveuser_num} or fk_senduser_num = #{fk_receiveuser_num} ) and del_status = 1
		<if test="searchType != ''">
		and lower(${searchType}) like '%' || lower(#{searchWord}) || '%'
		</if>	
		) V
		where rno between #{startRno} and #{endRno}
	</select>
	
	<!-- 페이징처리 / 검색기능 포함 된 휴지통 목록에서 상세내용 조회하기 (이전글, 다음글 제외) -->
	<!-- 
	<select id="getRecyclebinMailView" parameterType="HashMap" resultType="com.spring.bts.minjeong.model.MailVO">	
		select pk_mail_num, fk_senduser_num, fk_receiveuser_num, recemail, sendemail, recempname, sendempname, subject, content, reg_date
			 , filename, orgfilename, filesize, reservation_date
				from
				(
				    select pk_mail_num, fk_senduser_num, fk_receiveuser_num, recemail, sendemail, recempname, sendempname, subject, content
				         , to_char(reg_date, 'yyyy-mm-dd hh24:mi:ss') as reg_date         
				         , fileName, orgFilename, fileSize, to_char(reservation_date, 'yyyy-mm-dd hh24:mi:ss') as reservation_date
				    from tbl_mail
					<if test='searchType != "" and searchWord != "" '>
					where lower(${searchType}) like '%'|| lower(#{searchWord}) || '%'
					</if>	    
				) V
		where V.pk_mail_num = #{pk_mail_num}
	</select>
 	-->	

	<!-- 페이징처리 / 검색기능 포함 된 휴지통 목록에서 상세내용 조회하기 (이전글, 다음글 포함) -->
	<select id="getRecyclebinMailView" parameterType="HashMap" resultType="com.spring.bts.minjeong.model.MailVO">	
		select prev_seq ,pk_mail_num
     		 , prev_subject, fk_senduser_num, fk_receiveuser_num, recemail, sendemail, recempname, sendempname, subject, content, reg_date, reservation_date
		     , next_seq, next_subject
		     , filename, orgfilename, filesize
		        from
		        (
		            select lag(pk_mail_num,1) over(order by pk_mail_num desc) AS prev_seq            
		                 , lag(subject,1,'이전글이 없습니다.') over(order by pk_mail_num desc) AS prev_subject
		                 , pk_mail_num, fk_senduser_num, fk_receiveuser_num, recempname, sendempname, recemail, sendemail, subject, content
		                 , to_char(reg_date, 'yyyy-mm-dd hh24:mi:ss') as reg_date	
		                 , to_char(reservation_date, 'yyyy-mm-dd hh24:mi:ss') as reservation_date
		                 , lead(pk_mail_num,1) over(order by pk_mail_num desc) AS next_seq
		                 , lead(subject,1,'다음글이 없습니다.') over(order by pk_mail_num desc) AS next_subject	         
		                 , fileName, orgFilename, fileSize
		            from tbl_mail
					where (fk_receiveuser_num = #{fk_receiveuser_num} or fk_senduser_num = #{fk_receiveuser_num} ) and del_status = 1
					<if test='searchType != "" and searchWord != "" '>
					and lower(${searchType}) like '%'|| lower(#{searchWord}) || '%'
					</if>		            
		        ) V	
		where V.pk_mail_num = #{pk_mail_num}
	 </select>


	
	<!-- 휴지통에서 선택한 글들을 mail 테이블에서 삭제하기 -->
	<delete id="deleteFromTblMail" parameterType="HashMap">
		delete from tbl_mail
		where pk_mail_num = #{pk_mail_num}	
	</delete>

	<!-- ===== 휴지통 끝 ===== -->


	<!-- ===== 예약메일함 시작 ===== -->

	<!-- 총 예약메일 개수 구해오기 -->
	<select id="getTotalCount_reservation" parameterType="HashMap" resultType="int">
		select count(*)
		from tbl_mail
		where fk_senduser_num = #{fk_senduser_num} and del_status = 0 and temp_status = 0 and reservation_status = 1
		<if test="searchType != ''">
		and lower(${searchType}) like '%' || lower(#{searchWord}) || '%'
		</if>		
	</select>
	
	<!--  페이징처리 한 예약메일함목록 1 (검색 있든, 없든 모두 다 포함)  -->
 	<select id="getReservationListWithPaging" parameterType="HashMap" resultType="com.spring.bts.minjeong.model.MailVO">
		select pk_mail_num, fk_receiveuser_num, recempname, subject, reg_date, filename, reservation_date, importance, importance_star_send, importance_star_rec
		from 
		(
		select row_number() over(order by pk_mail_num desc) AS rno,
		       pk_mail_num, fk_receiveuser_num, recempname, subject
		       , to_char(reg_date,'yyyy-mm-dd hh24:mi:ss') as reg_date
		       , filename, to_char(reservation_date, 'yyyy-mm-dd hh24:mi:ss') as reservation_date
		       , importance, importance_star_send, importance_star_rec
		from tbl_mail
		where fk_senduser_num = #{fk_senduser_num} and del_status = 0 and temp_status = 0 and reservation_status = 1
		<if test="searchType != ''">
		and lower(${searchType}) like '%' || lower(#{searchWord}) || '%'
		</if>
		order by reservation_date desc	
		) V
		where rno between #{startRno} and #{endRno}
	</select>

	
	<!--  페이징처리 한 예약메일함목록 2 / 파라미터 X (검색 있든, 없든 모두 다 포함)  -->
 	<select id="reservationListWithPaging" resultType="com.spring.bts.minjeong.model.MailVO">
		select pk_mail_num, fk_senduser_num, fk_receiveuser_num, recempname, sendempname
		     , recemail, sendemail, subject, content, importance, reg_date
		     , filename, orgfilename, filesize, reservation_date, del_status
		     , reservation_status, read_status, importance_star_send, importance_star_rec
		from 
		(
		select row_number() over(order by pk_mail_num desc) AS rno,
		       pk_mail_num, fk_senduser_num, fk_receiveuser_num, recempname, sendempname
		       , to_char(reg_date,'yyyy-mm-dd hh24:mi:ss') as reg_date, recemail, sendemail, subject, content, importance
		       , filename, orgfilename, filesize, to_char(reservation_date, 'yyyy-mm-dd hh24:mi') as reservation_date
		       , del_status, reservation_status, read_status, importance_star_send, importance_star_rec
		from tbl_mail
		where del_status = 0 and reservation_status = 1
		order by reservation_date desc	
		) V
	</select> 
		
	<!-- 페이징처리 / 검색기능 포함 된 예약메일함 목록에서 상세내용 조회하기 (이전글, 다음글 제외) -->
	<!--
	<select id="getReservationMailView" parameterType="HashMap" resultType="com.spring.bts.minjeong.model.MailVO">
		select pk_mail_num, fk_senduser_num, fk_receiveuser_num, recemail, sendemail
			 , recempname, sendempname, subject, content, reg_date, reservation_date
			 , filename, orgfilename, filesize
				from
				(
				    select pk_mail_num, fk_senduser_num, fk_receiveuser_num, recemail, sendemail, recempname, sendempname, subject, content
				         , to_char(reg_date, 'yyyy-mm-dd hh24:mi:ss') as reg_date    
				         , to_char(reservation_date, 'yyyy-mm-dd hh24:mi:ss') as reservation_date     
				         , fileName, orgFilename, fileSize
				    from tbl_mail
					<if test='searchType != "" and searchWord != "" '>
					where lower(${searchType}) like '%'|| lower(#{searchWord}) || '%'
					</if>	    
				) V
		where V.pk_mail_num = #{pk_mail_num}	
	</select>	
  -->
  
	<!-- 페이징처리 / 검색기능 포함 된 예약메일함 목록에서 상세내용 조회하기 (이전글, 다음글 포함) -->
	<select id="getReservationMailView" parameterType="HashMap" resultType="com.spring.bts.minjeong.model.MailVO">	
		select pk_mail_num, fk_senduser_num, fk_receiveuser_num, recemail, sendemail, recempname, sendempname, subject, content, reg_date
			 , filename, orgfilename, filesize, reservation_date
				from
				(
				    select pk_mail_num, fk_senduser_num, fk_receiveuser_num, recemail, sendemail, recempname, sendempname, subject, content
				         , to_char(reg_date, 'yyyy-mm-dd hh24:mi:ss') as reg_date         
				         , fileName, orgFilename, fileSize, to_char(reservation_date, 'yyyy-mm-dd hh24:mi:ss') as reservation_date
				    from tbl_mail
					where fk_senduser_num = #{fk_senduser_num} and del_status = 0 and temp_status = 0 and reservation_status = 1
					<if test='searchType != "" and searchWord != "" '>
					and lower(${searchType}) like '%'|| lower(#{searchWord}) || '%'
					</if>	    
				) V
		where V.pk_mail_num = #{pk_mail_num}
	</select>
	
	
	<!-- 발송예약된 예약메일의 상태값을 1에서 0으로 변경한다. -->
	<update id="add_updateResStatus" parameterType="com.spring.bts.minjeong.model.MailVO">
		update tbl_mail set reservation_status = 0
		where pk_mail_num = #{pk_mail_num}
	</update>	
	
	<!-- ===== 예약메일함 끝 ===== -->
	

	<!-- ===== 임시보관함 시작 ===== -->

	<!--  총 임시보관함 개수 구해오기 (tmp_status == 1) -->
	<select id="getTotalCount_temporary" parameterType="HashMap" resultType="int">
		select count(*)
		from tbl_mail
		where fk_senduser_num = #{fk_senduser_num} and del_status = 0 and reservation_status = 0 and temp_status = 1
		<if test="searchType != ''">
		and lower(${searchType}) like '%' || lower(#{searchWord}) || '%'
		</if>		
	</select>

	
	<!--  페이징처리 한 임시보관함 메일목록 (검색 있든, 없든 모두 다 포함) (tmp_status == 1) -->
 	<select id="getTemporaryMailListWithPaging" parameterType="HashMap" resultType="com.spring.bts.minjeong.model.MailVO">
		select pk_mail_num, fk_senduser_num, recempname, sendempname, subject, reg_date, filename, importance, importance_star_send, importance_star_rec
		from 
		(
		select row_number() over(order by pk_mail_num desc) AS rno,
		       pk_mail_num, fk_senduser_num, recempname, sendempname, subject
		       , to_char(reg_date,'yyyy-mm-dd hh24:mi:ss') as reg_date
		       , filename, importance, importance_star_send, importance_star_rec
		from tbl_mail
		where fk_senduser_num = #{fk_senduser_num} and del_status = 0 and reservation_status = 0 and temp_status = 1
		<if test="searchType != ''">
		and lower(${searchType}) like '%' || lower(#{searchWord}) || '%'
		</if>	
		) V
		where rno between #{startRno} and #{endRno}
	</select> 	

	<!-- 페이징처리 / 검색기능 포함 된 임시보관함 목록에서 작성하던 글 보기 (이전글, 다음글 포함) -->
	<select id="getTemporaryMailView" parameterType="HashMap" resultType="com.spring.bts.minjeong.model.MailVO">	
		select pk_mail_num, fk_senduser_num, fk_receiveuser_num, recemail, sendemail, recempname, sendempname, subject, content, reg_date
			 , filename, orgfilename, filesize, reservation_date
				from
				(
				    select pk_mail_num, fk_senduser_num, fk_receiveuser_num, recemail, sendemail, recempname, sendempname, subject, content
				         , to_char(reg_date, 'yyyy-mm-dd hh24:mi:ss') as reg_date         
				         , fileName, orgFilename, fileSize, to_char(reservation_date, 'yyyy-mm-dd hh24:mi:ss') as reservation_date
				    from tbl_mail
					<if test='searchType != "" and searchWord != "" '>
					where lower(${searchType}) like '%'|| lower(#{searchWord}) || '%'
					</if>	    
				) V
		where V.pk_mail_num = #{pk_mail_num}
	</select>


	<!-- 임시보관함에서 제목 클릭했을 때 넘어왔을 경우 받아온 글번호인 pk_mail_num 의 temp_status 를 update (수정함) -->
<!-- 
	<update id="updateFromTbltemp" parameterType="HashMap">
		update tbl_mail set temp_status = 0
		where pk_mail_num = #{pk_mail_num}
	</update> 
-->

	<!-- 임시보관함에서 제목 클릭했을 때 넘어왔을 경우 받아온 글번호인 pk_mail_num 를 delete -->
	<delete id="deleteFromTbltemp">
		delete from tbl_mail
		where pk_mail_num = to_number(#{pk_mail_num})
	</delete>

	<!-- pk_mail_num 를 통해서 temp_status 조회해오기  -->
	<select id="getTempStatus" parameterType="String" resultType="HashMap">
		select temp_status
		from tbl_mail
		where pk_mail_num = to_number(#{pk_mail_num})
	</select>
	<!-- ===== 임시보관함 끝 ===== -->



	<!-- ===== 중요메일함 시작 ===== -->
	
	<!-- 총 중요 메일 건수 구해오기 -->
	<select id="getTotalCount_important" parameterType="HashMap" resultType="int">
		select count(*)
		from tbl_mail
		where (fk_receiveuser_num = #{fk_receiveuser_num} or fk_senduser_num = #{fk_receiveuser_num} ) and (importance_star_send = 1 or importance_star_rec = 1)
		<if test="searchType != ''">
		and lower(${searchType}) like '%' || lower(#{searchWord}) || '%'
		</if>		
	</select>
	
	<!-- 페이징처리 한 중요메일함 목록 1 (검색 있든, 없든 모두 다 포함) -->
<!-- 
	<select id="ImportantMailListSearchWithPaging" parameterType="HashMap" resultType="com.spring.bts.minjeong.model.MailVO">
		select pk_mail_num, fk_senduser_num, sendempname, subject, reg_date, filename, reservation_date, importance, importance_star_send, importance_star_rec
		from 
		(
		select row_number() over(order by pk_mail_num desc) AS rno,
		       pk_mail_num, fk_senduser_num, sendempname, subject
		       , to_char(reg_date,'yyyy-mm-dd hh24:mi:ss') as reg_date
		       , filename , to_char(reservation_date, 'yyyy-mm-dd hh24:mi:ss') as reservation_date
		       , importance, importance_star_send, importance_star_rec
		from tbl_mail
		where (fk_receiveuser_num = #{fk_receiveuser_num} or fk_senduser_num = #{fk_receiveuser_num} ) and importance_star_send = 1 or importance_star_rec = 1
		<if test="searchType != ''">
		and lower(${searchType}) like '%' || lower(#{searchWord}) || '%'
		</if>	
		) V
		where rno between #{startRno} and #{endRno}	
	</select>  -->

	
	<!-- 페이징처리 한 중요메일함 2 (검색 있든, 없든 모두 다 포함 && 읽음상태 표시) -->
 	<select id="ImportantMailListSearchWithPaging" parameterType="HashMap" resultType="com.spring.bts.minjeong.model.MailVO">
		select pk_mail_num, fk_senduser_num, sendempname, subject, reg_date, filename, reservation_date, importance, importance_star_send, importance_star_rec, imp_status
		from
		(
		select row_number() over(order by pk_mail_num desc) AS rno,
		       pk_mail_num, fk_senduser_num, sendempname, subject
		       , to_char(reg_date,'yyyy-mm-dd hh24:mi:ss') as reg_date
		       , filename, to_char(reservation_date, 'yyyy-mm-dd hh24:mi:ss') as reservation_date
		       , importance, importance_star_send, importance_star_rec, imp_status
		from tbl_mail M join tbl_mailread R
		on M.pk_mail_num = R.fk_mail_num
		where (fk_receiveuser_num = #{fk_receiveuser_num} or fk_senduser_num = #{fk_receiveuser_num} ) and (importance_star_send = 1 or importance_star_rec = 1)
		<if test="searchType != ''">
		and lower(${searchType}) like '%' || lower(#{searchWord}) || '%'
		</if>
		) V
		where rno between #{startRno} and #{endRno}
	</select>

	<!-- 페이징처리 / 검색기능 포함 된 중요메일함 목록에서 상세내용 조회하기 (이전글, 다음글 제외) -->
	<!-- 
	<select id="getImportantMailView" parameterType="HashMap" resultType="com.spring.bts.minjeong.model.MailVO">
		select pk_mail_num, fk_senduser_num, fk_receiveuser_num, recemail, sendemail, recempname, sendempname, subject, content, reg_date
			 , filename, orgfilename, filesize, reservation_date
				from
				(
				    select pk_mail_num, fk_senduser_num, fk_receiveuser_num, recemail, sendemail, recempname, sendempname, subject, content
				         , to_char(reg_date, 'yyyy-mm-dd hh24:mi:ss') as reg_date         
				         , fileName, orgFilename, fileSize, to_char(reservation_date, 'yyyy-mm-dd hh24:mi:ss') as reservation_date
				    from tbl_mail
					<if test='searchType != "" and searchWord != "" '>
					where lower(${searchType}) like '%'|| lower(#{searchWord}) || '%'
					</if>	    
				) V
		where V.pk_mail_num = #{pk_mail_num}	
	</select>
 	-->

	<!-- 페이징처리 / 검색기능 포함 된 중요메일함 목록에서 상세내용 조회하기 (이전글, 다음글 포함) -->
	<select id="getImportantMailView" parameterType="HashMap" resultType="com.spring.bts.minjeong.model.MailVO">
		select prev_seq ,pk_mail_num
     		 , prev_subject, fk_senduser_num, fk_receiveuser_num, recemail, sendemail, recempname, sendempname, subject, content, reg_date, reservation_date
		     , next_seq, next_subject
		     , filename, orgfilename, filesize
		        from
		        (
		            select lag(pk_mail_num,1) over(order by pk_mail_num desc) AS prev_seq            
		                 , lag(subject,1,'이전글이 없습니다.') over(order by pk_mail_num desc) AS prev_subject
		                 , pk_mail_num, fk_senduser_num, fk_receiveuser_num, recempname, sendempname, recemail, sendemail, subject, content
		                 , to_char(reg_date, 'yyyy-mm-dd hh24:mi:ss') as reg_date	
		                 , to_char(reservation_date, 'yyyy-mm-dd hh24:mi:ss') as reservation_date
		                 , lead(pk_mail_num,1) over(order by pk_mail_num desc) AS next_seq
		                 , lead(subject,1,'다음글이 없습니다.') over(order by pk_mail_num desc) AS next_subject	         
		                 , fileName, orgFilename, fileSize
		            from tbl_mail
					where (fk_receiveuser_num = #{fk_receiveuser_num} or fk_senduser_num = #{fk_receiveuser_num} ) and (importance_star_send = 1 or importance_star_rec = 1)
					<if test='searchType != "" and searchWord != "" '>
					and lower(${searchType}) like '%'|| lower(#{searchWord}) || '%'
					</if>		            
		        ) V	
		where V.pk_mail_num = #{pk_mail_num}
	</select>

	<!--  updateImportance_star_rec Update 를 통해 값을 0,1로 변경해주기 -->
	<update id="updateImportance_star_rec" parameterType="HashMap">
		update tbl_mail set
		importance_star_rec = decode(importance_star_rec, 1, 0, 0, 1)
		where pk_mail_num = #{pk_mail_num}
	</update>

	<!--  updateImportance_star_send Update 를 통해 값을 0,1로 변경해주기 -->
	<update id="updateImportance_star_send" parameterType="HashMap">
		update tbl_mail set
		importance_star_send = decode(importance_star_send, 1, 0, 0, 1)	
		where pk_mail_num = #{pk_mail_num}
	</update>
	
	<!-- ===== 중요메일함 끝 ===== -->


	<!-- ===== 내게쓴메일함 시작 ===== -->

	<!-- 총 내게 쓴 메일 건수 구해오기 -->
	<select id="getTotalCount_sendToMe" parameterType="HashMap" resultType="int">
		select count(*)
		from tbl_mail
		where fk_senduser_num = #{fk_senduser_num} and fk_receiveuser_num = #{fk_senduser_num} and del_status = 0 and reservation_status = 0 and temp_status = 0
		<if test="searchType != ''">
		and lower(${searchType}) like '%' || lower(#{searchWord}) || '%'
		</if>		
	</select>

	
	<!-- 페이징처리 한 내게쓴 메일목록 (검색 있든, 없든 모두 다 포함)  -->
 	<select id="sendToMeListSearchWithPaging" parameterType="HashMap" resultType="com.spring.bts.minjeong.model.MailVO">
		select pk_mail_num, fk_receiveuser_num, recempname, subject, reg_date, filename, reservation_date, importance, importance_star_send
		from
		(
		select row_number() over(order by pk_mail_num desc) AS rno,
		       pk_mail_num, fk_receiveuser_num, recempname, subject
		       , to_char(reg_date,'yyyy-mm-dd hh24:mi:ss') as reg_date
		       , filename, to_char(reservation_date, 'yyyy-mm-dd hh24:mi:ss') as reservation_date
		       , importance, importance_star_send
		from tbl_mail
		where fk_senduser_num = #{fk_senduser_num} and fk_receiveuser_num = #{fk_senduser_num} and del_status = 0 and reservation_status = 0 and temp_status = 0
		<if test="searchType != ''">
		and lower(${searchType}) like '%' || lower(#{searchWord}) || '%'
		</if>	
		) V
		where rno between #{startRno} and #{endRno}
	</select> 	



	<!-- 페이징처리 / 검색기능 포함 된 내게쓴메일함 목록에서 상세내용 조회하기 (이전글, 다음글 제외) -->
	<!-- 
	<select id="getSendToMeMailView" parameterType="HashMap" resultType="com.spring.bts.minjeong.model.MailVO">	
		select pk_mail_num, fk_senduser_num, fk_receiveuser_num, recemail, sendemail, recempname, sendempname, subject, content, reg_date
			 , filename, orgfilename, filesize, reservation_date
				from
				(
				    select pk_mail_num, fk_senduser_num, fk_receiveuser_num, recemail, sendemail, recempname, sendempname, subject, content
				         , to_char(reg_date, 'yyyy-mm-dd hh24:mi:ss') as reg_date         
				         , fileName, orgFilename, fileSize, to_char(reservation_date, 'yyyy-mm-dd hh24:mi:ss') as reservation_date
				    from tbl_mail
					<if test='searchType != "" and searchWord != "" '>
					where lower(${searchType}) like '%'|| lower(#{searchWord}) || '%'
					</if>	    
				) V
		where V.pk_mail_num = #{pk_mail_num}
	</select>
 	-->
 	
	<!-- 페이징처리 / 검색기능 포함 된 보낸메일함 목록에서 상세내용 조회하기 (이전글, 다음글 포함) -->
	<select id="getSendToMeMailView" parameterType="HashMap" resultType="com.spring.bts.minjeong.model.MailVO">	
		select prev_seq ,pk_mail_num
     		 , prev_subject, fk_senduser_num, fk_receiveuser_num, recemail, sendemail, recempname, sendempname, subject, content, reg_date, reservation_date
		     , next_seq, next_subject
		     , filename, orgfilename, filesize
		        from
		        (
		            select lag(pk_mail_num,1) over(order by pk_mail_num desc) AS prev_seq            
		                 , lag(subject,1,'이전글이 없습니다.') over(order by pk_mail_num desc) AS prev_subject
		                 , pk_mail_num, fk_senduser_num, fk_receiveuser_num, recempname, sendempname, recemail, sendemail, subject, content
		                 , to_char(reg_date, 'yyyy-mm-dd hh24:mi:ss') as reg_date	
		                 , to_char(reservation_date, 'yyyy-mm-dd hh24:mi:ss') as reservation_date
		                 , lead(pk_mail_num,1) over(order by pk_mail_num desc) AS next_seq
		                 , lead(subject,1,'다음글이 없습니다.') over(order by pk_mail_num desc) AS next_subject	         
		                 , fileName, orgFilename, fileSize
		            from tbl_mail
					where fk_senduser_num = #{fk_senduser_num} and fk_receiveuser_num = #{fk_senduser_num} and del_status = 0 and reservation_status = 0 and temp_status = 0
					<if test='searchType != "" and searchWord != "" '>
					and lower(${searchType}) like '%'|| lower(#{searchWord}) || '%'
					</if>		            
		        ) V	
		where V.pk_mail_num = #{pk_mail_num}
	 </select>
	
	<!-- ===== 내게쓴메일함 끝 ===== -->


	<!-- 메일 목록에서 읽음처리 시작 -->

	<!-- 받은 메일 1개 클릭 시 rec_status 업데이트 (받은메일함에서 읽음 표시하기 위함) -->
	<update id="updateRec_status" parameterType="HashMap">
		update tbl_mailRead 
		   set rec_status = 1
		 	 , rec_date = sysdate
		where fk_mail_num = #{pk_mail_num}
	</update>

	<!-- 보낸 메일 1개 클릭 시 send_status 업데이트 (보낸메일함에서 읽음 표시하기 위함)  -->
	<update id="updateSend_status" parameterType="HashMap">
		update tbl_mailRead 
		   set send_status = 1
		 	 , send_date = sysdate
		where fk_mail_num = #{pk_mail_num}
	</update>
	
	<!-- 받은 메일 1개 클릭 시 imp_status 업데이트 (imp_status = 1로 변경한다.중요메일함에서 읽음 표시하기 위함) -->
	<update id="updateImp_status" parameterType="HashMap">
		update tbl_mailRead 
		   set imp_status = 1
		 	 , imp_date = sysdate
		where fk_mail_num = #{pk_mail_num}
	</update>	
	
	<!-- 글씀과 동시에 tbl_mailRead 테이블에 해당 글번호의 값을 insert 시켜준다. -->
	<insert id="addToMailRead" parameterType="String">
		insert into tbl_mailRead(fk_mail_num, rec_status, send_status, imp_status)
		values(#{fk_mail_num}, 0, 0, 0)
	</insert>  
 
 	<!-- 메일 글쓰기 pk_mail_num 가져오기 (글쓰기 다음 번호, 읽음처리 테이블 fk_mail_num 에 넣기 위함) -->
	<select id="getPkMailNum" parameterType="com.spring.bts.minjeong.model.MailVO" resultType="String">
		select pk_mail_num
		FROM
		(
		select pk_mail_num, rownum as rno
		from tbl_mail
		order by pk_mail_num desc
		) V
		where rno = 1
    </select>

	<!-- 메일 목록에서 사용자가 읽음처리 끝 -->

	<!-- 보낸메일함 수신확인 읽음체크 목록 시작 -->
	<!--  총 보낸메일 개수 구해오기 -->
	<select id="getTotalCount_recCheck" parameterType="HashMap" resultType="int">
		select count(*)
		from tbl_mail
		where fk_senduser_num = #{fk_senduser_num} and fk_receiveuser_num != #{fk_senduser_num} and
		del_status = 0 and reservation_status = 0 and temp_status = 0
		<if test="searchType != ''">
		and lower(${searchType}) like '%' || lower(#{searchWord}) || '%'
		</if>		
	</select>
	
	<!-- 페이징처리 한 보낸 수신확인 메일목록 (검색 있든, 없든 모두 다 포함 && 읽음상태 표시) -->
 	<select id="sendMailList_recCheck" parameterType="HashMap" resultType="com.spring.bts.minjeong.model.MailVO">
		select pk_mail_num, fk_receiveuser_num, recempname, subject, reg_date, filename, reservation_date, importance, importance_star_send, send_status
			 , rec_status, rec_date 
		from
		(
		select row_number() over(order by pk_mail_num desc) AS rno,
		       pk_mail_num, fk_receiveuser_num, recempname, subject
		       , to_char(reg_date,'yyyy-mm-dd hh24:mi:ss') as reg_date
		       , filename, to_char(reservation_date, 'yyyy-mm-dd hh24:mi:ss') as reservation_date
		       , importance, importance_star_send, send_status, rec_status, to_char(rec_date, 'yyyy-mm-dd hh24:mi:ss') as rec_date
		from tbl_mail M join tbl_mailread R
		on M.pk_mail_num = R.fk_mail_num
		where fk_senduser_num = #{fk_senduser_num} and fk_receiveuser_num != #{fk_senduser_num} and
		del_status = 0 and reservation_status = 0 and temp_status = 0
		<if test="searchType != ''">
		and lower(${searchType}) like '%' || lower(#{searchWord}) || '%'
		</if>
		) V
		where rno between #{startRno} and #{endRno}
	</select>
	<!-- 보낸메일함 수신확인 읽음체크 목록 끝 -->

	<!-- 다중메일 발송을 위해 사원 정보 가져오기 시작 -->
	<select id="addBook_depInfo_select" resultType="com.spring.bts.hwanmo.model.EmployeeVO">
		select E.pk_emp_no, E.emp_name , R.ko_rankname , D.ko_depname , R.pk_rank_no, E.uq_email
		from tbl_EMPLOYEES E
		join tbl_rank_sort R
		on E.fk_rank_id = R.pk_rank_no
		join tbl_dep_sort D
		on E.fk_department_id = D.pk_dep_no
		order by R.pk_rank_no
	</select>
	<!-- 다중메일 발송을 위해 사원 정보 가져오기 끝 -->
	
	<!--  로그인한 사용자의 안읽은 메일갯수 가져오기 (rec_status=0) / 메인페이지 -->
		<select id="recMailCount_main" parameterType="String" resultType="int">
		select count(*)
		from 
		(
		select row_number() over(order by pk_mail_num desc) AS rno,
		       pk_mail_num, fk_senduser_num, sendempname, subject
		       , to_char(reg_date,'yyyy-mm-dd hh24:mi:ss') as reg_date
		       , filename, to_char(reservation_date, 'yyyy-mm-dd hh24:mi:ss') as reservation_date
		       , importance, importance_star_rec, rec_status
		from tbl_mail M join tbl_mailread R
		on m.pk_mail_num = r.fk_mail_num
		where fk_receiveuser_num = #{fk_receiveuser_num} and fk_senduser_num != #{fk_receiveuser_num} and
		del_status = 0 and reservation_status = 0 and temp_status = 0 and rec_status = 0	
		order by pk_mail_num desc
		) V
	</select>

	<!-- == 검색어 입력 시 자동글 완성하기 6 --> 
	<!-- searchType 을 이름으로 설정했을 때 / 아닐 때 -->
	<select id="wordSearchShow" parameterType="HashMap" resultType="String">
		<choose>
			<when test="searchType eq 'subject'">
				select distinct ${searchType}
			</when> 
			<otherwise>
				select ${searchType}
			</otherwise>
		</choose>
		from tbl_mail
		where lower(${searchType}) like '%'|| lower(#{searchWord}) ||'%'
		<choose>
			<when test="searchType neq 'sendempname'">
				order by ${searchType} asc
			</when>
			<when test="searchType eq 'sendempname'">
				order by ${searchType} asc
			</when>			 
			<otherwise>
				order by pk_mail_num desc
			</otherwise>
		</choose>
	</select>
	

</mapper>