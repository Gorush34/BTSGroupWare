<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== #29. mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ==== #29. 루트 엘리먼트 & 네임스페이스 설정(프로젝트 전체내에서 유일해야 한다.) ==== -->
<!-- ==== 대부분은 namespace에 파일이름 사용(유일하니까) ==== -->
<mapper namespace="jieun">


	
	<!-- 사내 캘린더에 사내 캘린더 소분류 추가하기  -->
	<insert id="addComCalendar" parameterType="HashMap">
		insert into tbl_calendar(pk_calno, fk_lgcatgono, calname, fk_emp_no)
		values (seq_calno.nextval, 2, #{addCom_calname}, #{fk_emp_no})
	</insert>

			<!-- // 사내 캘린더에 캘린더 소분류 명 존재 여부 알아오기  -->
			<select id="existComCalendar" parameterType="String" resultType="int">
				select  count(*)
				from tbl_calendar
				where fk_lgcatgono = 2 and calname = #{addCom_calname}
			</select>
	
	<!-- 사내 캘린더에 사내 캘린더 소분류 보여주기 -->
	<select id="showCompanyCalendar" resultType="com.spring.bts.jieun.model.CalendarVO">
		select pk_calno, fk_lgcatgono, calname
		from tbl_calendar
		where fk_lgcatgono = 2
		order by pk_calno asc
	</select>
	
	<!-- 내 캘린더에 내 캘린더 소분류 추가하기  -->
	<insert id="addMyCalendar" parameterType="HashMap">
		insert into tbl_calendar(pk_calno, fk_lgcatgono, calname, fk_emp_no)
		values (seq_calno.nextval, 1, #{addMy_calname}, #{fk_emp_no})
	</insert>
			<!-- 내 캘린더에 캘린더 소분류 명 존재 여부 알아오기 -->
			<select id="existMyCalendar" parameterType="String" resultType="int">
				select count(*)
				from tbl_calendar
				where fk_lgcatgono = 1 and calname = #{addMy_calname}
			</select>
	
	<!-- 내 캘린더에 내 캘린더 소분류 보여주기 -->
	<select id="showMyCalendar" parameterType="String" resultType="com.spring.bts.jieun.model.CalendarVO">
		select pk_calno, fk_lgcatgono, calname
		from tbl_calendar
		where fk_lgcatgono = 1 and fk_emp_no = #{fk_emp_no}
		order by pk_calno asc
	</select>
	
	<!-- 캘린더 소분류 수정하기 -->
	<update id="editCalendar" parameterType="HashMap">
		update tbl_calendar set calname = #{calname}
		where pk_calno = #{pk_calno}
	</update>
	
	<!-- 캘린더에 이름이 있는지 확인 -->
	<select id="existsCalendar" parameterType="HashMap" resultType="int">
		select count(*)
		from tbl_calendar
		where fk_lgcatgono = #{caltype} 
		and fk_emp_no = #{fk_emp_no} 
		and calname = #{calname}
	</select>
	
	<!-- 캘린더 소분류 삭제하기  -->
	<delete id="deleteCalendar" parameterType="String">
		delete from tbl_calendar
		where pk_calno = #{pk_calno}
	</delete>
	
	
	<!-- 등록 폼에 서브캘린더 가져오기 -->
	<select id="selectCalNo" parameterType="HashMap" resultType="com.spring.bts.jieun.model.CalendarVO">
		select pk_calno, fk_lgcatgono, calname
		from tbl_calendar
		where fk_lgcatgono = #{fk_lgcatgono} and fk_emp_no =#{fk_emp_no}
		order by pk_calno asc
	</select>
	
	<!-- 참석자 추가하기 : 사원 명단 불러오기 -->
	<select id="searchJoinUser" parameterType="String" resultType="com.spring.bts.hwanmo.model.EmployeeVO">
		select uq_email, emp_name
		from tbl_employees
		where lower(emp_name) like '%'|| lower(#{joinUserName}) ||'%'
	</select>
	
	<!-- 일정등록 하기  -->
	<insert id="scheduleRegisterInsert" parameterType="HashMap">
		insert into tbl_schedule(pk_schno, fk_emp_no, fk_calno, subject, startdate, enddate, content, color, place, joinuser, fk_lgcatgono)
		values(seq_schno.nextval, #{fk_emp_no}, #{fk_calno}, #{subject}, to_date(#{startdate}, 'yyyymmddhh24miss'), to_date(#{enddate}, 'yyyymmddhh24miss'), #{content}, #{color}, #{place}, #{joinuser}, #{fk_lgcatgono} )
	</insert>


	<!-- 일정 보여주기 -->
	<select id="selectSchedule" parameterType="String" resultType="com.spring.bts.jieun.model.ScheduleVO">
		select pk_schno, fk_emp_no, fk_calno, subject, startdate, enddate, content, color, place, joinuser, fk_lgcatgono
		from tbl_schedule
		where fk_emp_no = #{fk_emp_no}
		fk_lgcatgono = 2 <!--  OR
		(fk_lgcatgono != 2 AND lower(joinuser) || #{fk_emp_no}) ) -->
		order by pk_schno asc
	</select>





</mapper>